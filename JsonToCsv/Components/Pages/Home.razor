@page "/"

@inject JsonConverterService JsonConverterService

<PageTitle>Home</PageTitle>

<MudStack>
    <MudText Typo="Typo.h4" GutterBottom="true">JSON to CSV Converter</MudText>
    <MudStack>
        <MudTextField @ref="_jsonTextField"
                      T="string"
                      Label="JSON"
                      Lines="3"
                      Variant="Variant.Outlined" />

        <MudTextField @ref="_csvTextField"
                      T="string"
                      Label="CSV"
                      Lines="3"
                      ReadOnly="true"
                      Variant="Variant.Outlined"
                      Error="@_csvError"
                      ErrorText="@_csvErrorText"/>
    </MudStack>

    <MudStack Row="true">
        <MudTextField @ref="_csvFilePathTextField"
                      T="string"
                      Label="CSV File Path"
                      Variant="Variant.Outlined" />
    </MudStack>

    <MudStack Row="true">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@ConvertToCsvAsync">Convert</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Warning" OnClick="@ClearAsync">Clear</MudButton>
    </MudStack>
</MudStack>

@code
{
    private MudTextField<string> _jsonTextField;
    private MudTextField<string> _csvTextField;
    private MudTextField<string> _csvFilePathTextField;
    private bool _csvError;
    private string _csvErrorText;

    private async Task ConvertToCsvAsync() => await ConvertJsonAndSetCsvText(_jsonTextField.Text);

    private async Task ConvertJsonAndSetCsvText(string json)
    {
        try
        {
            _csvError = false;
            await _csvTextField.SetText(JsonConverterService.ConvertToCsv(json));
        }
        catch (Exception ex)
        {
            _csvErrorText = $"Error: {ex.Message}";
            _csvError = true;
            await Task.CompletedTask;
        }
    }

    private async Task ClearAsync()
    {
        await _jsonTextField.SetText(string.Empty);
        await _csvTextField.SetText(string.Empty);
    }

    private async Task UploadJsonFile(IBrowserFile file)
    {
        using var streamReader = new StreamReader(file.OpenReadStream());
        await _jsonTextField.SetText(await streamReader.ReadToEndAsync());
    }
}