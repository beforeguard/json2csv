@page "/"

@inject JsonConverterService JsonConverterService

<PageTitle>Home</PageTitle>

<MudStack>
    <MudText Typo="Typo.h4" GutterBottom="true">JSON to CSV Converter</MudText>
    <MudStack>
        <MudTextField @ref="jsonTextField"
                      T="string"
                      Label="JSON"
                      Lines="3"
                      Variant="Variant.Outlined" />

        <MudTextField @ref="csvTextField"
                      T="string"
                      Label="CSV"
                      Lines="3"
                      ReadOnly="true"
                      Variant="Variant.Outlined" />
    </MudStack>

    <MudStack Row="true">
        <MudTextField @ref="csvFilePathTextField"
                      T="string"
                      Label="CSV File Path"
                      Variant="Variant.Outlined" />
    </MudStack>

    <MudStack Row="true">
        <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@ConvertToCsvAsync">Convert</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Warning" OnClick="@ClearAsync">Clear</MudButton>
    </MudStack>
</MudStack>

@code
{
    private MudTextField<string> jsonTextField;
    private MudTextField<string> csvTextField;
    private MudTextField<string> csvFilePathTextField;

    private async Task ConvertToCsvAsync() => await ConvertJsonAndSetCsvText(jsonTextField.Text);

    private async Task ConvertJsonAndSetCsvText(string json)
    {
        try
        {
            csvTextField.Error = false;
            await csvTextField.SetText(JsonConverterService.ConvertToCsv(json));
        }
        catch (Exception ex)
        {
            await csvTextField.SetText($"Error: {ex.Message}");
            csvTextField.Error = true;
            await Task.CompletedTask;
        }
    }

    private async Task ClearAsync()
    {
        await jsonTextField.SetText(string.Empty);
        await csvTextField.SetText(string.Empty);
    }

    private async Task UploadJsonFile(IBrowserFile file)
    {
        using var streamReader = new StreamReader(file.OpenReadStream());
        await jsonTextField.SetText(await streamReader.ReadToEndAsync());
    }
}